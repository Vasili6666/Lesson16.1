package tests;

import io.restassured.http.ContentType;
import io.restassured.response.Response;
import org.junit.jupiter.api.DisplayName;
import org.junit.jupiter.api.Test;

import static io.restassured.RestAssured.given;

public class ProfileOperationTests {

    String userName = "basil6";
    String password = "Basil1982!";

    @Test
    @DisplayName("–î–æ–±–∞–≤–ª–µ–Ω–∏–µ –∫–Ω–∏–≥–∏ –≤ –ø—Ä–æ—Ñ–∏–ª—å –∏ —É–¥–∞–ª–µ–Ω–∏–µ —á–µ—Ä–µ–∑ API (—Ä–µ–∞–ª—å–Ω—ã–π ISBN)")
    void addAndDeleteBook() {

        // === 1. –ê–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏—è ===
        Response loginResponse =
                given()
                        .contentType(ContentType.JSON)
                        .body("{ \"userName\": \"" + userName + "\", \"password\": \"" + password + "\" }")
                        .log().all()
                        .when()
                        .post("https://demoqa.com/Account/v1/Login")
                        .then()
                        .log().all()
                        .statusCode(200)
                        .extract().response();

        String token = loginResponse.path("token");
        String userId = loginResponse.path("userId");
        System.out.println("üîë Token: " + token);
        System.out.println("üë§ UserId: " + userId);

        // === 2. –ü–æ–ª—É—á–∞–µ–º —Å–ø–∏—Å–æ–∫ –≤—Å–µ—Ö –∫–Ω–∏–≥ –∏ –±–µ—Ä—ë–º –ø–µ—Ä–≤—ã–π ISBN ===
        Response booksResponse =
                given()
                        .contentType(ContentType.JSON)
                        .log().all()
                        .when()
                        .get("https://demoqa.com/BookStore/v1/Books")
                        .then()
                        .log().all()
                        .statusCode(200)
                        .extract().response();

        String isbn = booksResponse.jsonPath().getString("books[0].isbn");
        System.out.println("üìö –ò—Å–ø–æ–ª—å–∑—É–µ–º ISBN: " + isbn);

        // === 3. –î–æ–±–∞–≤–ª–µ–Ω–∏–µ –∫–Ω–∏–≥–∏ –≤ –ø—Ä–æ—Ñ–∏–ª—å ===
        given()
                .contentType(ContentType.JSON)
                .header("Authorization", "Bearer " + token)
                .body("{ \"userId\": \"" + userId + "\", " +
                        "\"collectionOfIsbns\": [ { \"isbn\": \"" + isbn + "\" } ] }")
                .log().all()
                .when()
                .post("https://demoqa.com/BookStore/v1/Books")
                .then()
                .log().all()
                .statusCode(201);

        // === 4. –£–¥–∞–ª–µ–Ω–∏–µ –∫–Ω–∏–≥–∏ –∏–∑ –ø—Ä–æ—Ñ–∏–ª—è ===
        given()
                .contentType(ContentType.JSON)
                .header("Authorization", "Bearer " + token)
                .body("{ \"isbn\": \"" + isbn + "\", \"userId\": \"" + userId + "\" }")
                .log().all()
                .when()
                .delete("https://demoqa.com/BookStore/v1/Book")
                .then()
                .log().all()
                .statusCode(204);
    }
}
